package daltm;

import java.util.Stack;

public class test {
	public static boolean isOperator(char c) {
		if(c=='+' || c=='-' || c=='/' || c=='*' || c=='^') {
			return true;
		}
		return false;
	}
	public static boolean isTrigonometric(String s) {
		   if(s.equals("sin") || s.equals("cos") || s.equals("tan") || s.equals("cot") || s.equals("log") || s.equals("can")) {
			   return true; 
		   }
		   return false;
	}
	public static boolean isNumeric(String c) {
	    try {
	        double d = Double.parseDouble(c);
	    } catch (NumberFormatException | NullPointerException nfe) {
	        return false;
	    }
	    return true;
	}
	public static String combinePlusAndNegative(String input) {
		String result = input;
		int i = 0;
		boolean isNegative = false;
		while(i<result.length()-1) {
			char c = result.charAt(i);
			if((c=='+' || c=='-') && (result.charAt(i+1)=='+' || result.charAt(i+1)=='-')) {
				System.out.println("1");
				int j = i;
				for(; j<result.length() - 1; j++) {
					char operator = result.charAt(j);
					if(operator=='+' || operator=='-') {
						if(operator=='-') {
							isNegative = !isNegative;
						}
					}else {
						break;
					}
				}
				System.out.println("alo");
				if(isNegative) {
					result=result.substring(0,i) + "-" + result.substring(j,result.length());
				}else {
					result=result.substring(0,i) + "+" + result.substring(j,result.length());
				}
				isNegative = false;
				
			}
			if(c=='(' && result.charAt(i+1)=='+') {
				result = result.substring(0,i+1)+"0"+result.substring(i+1,result.length());
				System.out.println(result);
			}
			i++;
		}
		return result;
	}
	public static boolean areParenthesisBalanced(String input) 
    { 
       /* Declare an empty character stack */
       Stack st=new Stack(); 
       
       /* Traverse the given expression to  
          check matching parenthesis */
       for(int i=0;i<input.length();i++){
    	  char c = input.charAt(i);
          if (c == '(' ) {
            st.push(c); 
          }
          if (c== ')') { 
        	  if (st.isEmpty()) { 
                   return false; 
             }  
             else if ( !(((char) st.pop()) == '(' && c ==')') ) { 
                   return false; 
             } 
          } 
            
       }     
       if (st.isEmpty()) 
         return true; /*balanced*/
       else {   /*not balanced*/
             return false; 
         }  
    } 
	public static void main(String[] args) {
		String input = "sin(90)";
		System.out.println(areParenthesisBalanced(input));
	}

}
