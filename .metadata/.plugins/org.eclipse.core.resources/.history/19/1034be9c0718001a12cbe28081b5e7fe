package daltm;

import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
 
public class FutureExample {
 
    public static void main(String[] args) {
        ExecutorService executorService = Executors.newSingleThreadExecutor();
 
        // Do the call in a separate thread, get a Future back
        Future<Double> future = executorService.submit(FutureExample::getFromServer);
 
        try {
            // Wait for at most 10 seconds until the result is returned
            Double result = future.get(10L, TimeUnit.SECONDS);
            System.out.println("Result: " + result);
        } catch (TimeoutException e) {
            System.out.println("No response from server!");
        } catch (InterruptedException | ExecutionException e) {
            System.err.println("An error occurred: " + e.getMessage());
        }
 
        executorService.shutdownNow();
    }
 
    private static double getFromServer() {
        return 4/0;
    }
}